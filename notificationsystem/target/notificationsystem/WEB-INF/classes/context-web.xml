<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <!-- Will map everything we want to be public to this folder, css, imgs and js -->
    <!--<mvc:resources mapping="/public/**" location="/WEB-INF/public/"/>
    <mvc:resources mapping="/**.html" location="/"/>
    <mvc:resources mapping="/**.txt" location="/"/>-->

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <mvc:annotation-driven />

    <context:component-scan base-package="com.amazon.notification.controllers"/>

    <!-- Will set the location of the view files - the view sent back for a request must match the name
     * of one of the files but without the jsp on the end -->
<!--    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>-->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- unlimited size for now -->
        <property name="maxUploadSize" value="-1"/>
        <!-- this is the default anyway (in bytes) -->
        <property name="maxInMemorySize" value="10240"/>
    </bean>

 
</beans>